import streamlit as st
from openai import OpenAI
import json

# üîë API Key
client = OpenAI(api_key="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")

# ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤
subject_map = {
    "‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå": ["‡πÅ‡∏£‡∏á", "‡πÅ‡∏™‡∏á", "‡πÄ‡∏™‡∏µ‡∏¢‡∏á", "‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô", "‡πÑ‡∏ü‡∏ü‡πâ‡∏≤"],
    "‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤": ["‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡πà‡∏á‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï", "‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏á‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏™‡∏á", "‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏≤‡∏¢‡πÉ‡∏à", "‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡∏ñ‡πà‡∏≤‡∏¢", "‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡∏Å‡∏£‡∏£‡∏°"],
    "‡πÄ‡∏Ñ‡∏°‡∏µ": ["‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏™‡∏≤‡∏£", "‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏Ñ‡∏°‡∏µ", "‡∏Å‡∏£‡∏î-‡πÄ‡∏ö‡∏™", "‡∏™‡∏≤‡∏£‡∏•‡∏∞‡∏•‡∏≤‡∏¢"],
    "‡∏î‡∏≤‡∏£‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå": ["‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡∏£‡∏¥‡∏¢‡∏∞", "‡∏ß‡∏±‡∏è‡∏à‡∏±‡∏Å‡∏£‡∏Ç‡∏≠‡∏á‡∏î‡∏ß‡∏á‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô"],
    "‡πÇ‡∏•‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°": ["‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏•‡∏Å", "‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥", "‡∏™‡∏¥‡πà‡∏á‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°"]
}

st.title("üß™ QUIZ ME if you CAN ")

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡πÅ‡∏•‡∏∞‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
subject = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏ß‡∏¥‡∏ä‡∏≤", list(subject_map.keys()))
topic = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠", subject_map[subject])

# ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
if st.button("‚ú® ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö"):
    with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°..."):

        # üîπ ‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
        summary_prompt = f"‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ '{topic}' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏ï‡πâ‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 6 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î"
        summary_response = client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": summary_prompt}]
        )
        st.session_state["summary_text"] = summary_response.choices[0].message.content.strip()

        # üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        quiz_prompt = f"""
        ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏õ‡∏£‡∏ô‡∏±‡∏¢ 10 ‡∏Ç‡πâ‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ "{topic}" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏ï‡πâ‡∏ô
        ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°, ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 4 ‡∏Ç‡πâ‡∏≠, ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        ‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡∏•‡πâ‡∏ß‡∏ô ‡πÜ ‡∏´‡πâ‡∏≤‡∏°‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡πÄ‡∏Å‡∏£‡∏¥‡πà‡∏ô‡πÉ‡∏î ‡πÜ ‡∏ó‡∏±‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏á JSON:
        [
            {{
                "question": "...",
                "options": ["...", "...", "...", "..."],
                "answer": "..."
            }},
            ...
        ]
        ‡∏¢‡πâ‡∏≥‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ ‡∏ï‡∏≠‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏•‡πâ‡∏ß‡∏ô‡πÜ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏ó‡πà‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        """
        quiz_response = client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": quiz_prompt}]
        )

        try:
            st.session_state["quiz_data"] = json.loads(quiz_response.choices[0].message.content)
        except:
            st.error("‚ùå ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏•‡∏≠‡∏á‡∏Å‡∏î‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
            st.stop()

# ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÉ‡∏ô session_state
if "quiz_data" in st.session_state:
    quiz_data = st.session_state["quiz_data"]
    summary_text = st.session_state["summary_text"]

    st.subheader("üìò ‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤")
    st.info(summary_text)

    st.subheader("üß™ ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö 10 ‡∏Ç‡πâ‡∏≠")

    if "user_answers" not in st.session_state:
        st.session_state["user_answers"] = {}

    for idx, q in enumerate(quiz_data):
        st.markdown(f"**{idx+1}. {q['question']}**")
        st.session_state["user_answers"][idx] = st.radio(
            "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö",
            q["options"],
            key=f"q{idx}",
            index=q["options"].index(st.session_state["user_answers"].get(idx, q["options"][0]))
        )

    if st.button("‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö"):
        st.session_state["checked"] = True

# ‚úÖ ‡πÄ‡∏â‡∏•‡∏¢‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
if st.session_state.get("checked", False):
    st.subheader("üìù ‡πÄ‡∏â‡∏•‡∏¢‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ñ‡∏≤‡∏°‡∏ï‡πà‡∏≠")
    score = 0
    quiz_data = st.session_state["quiz_data"]
    user_answers = st.session_state["user_answers"]

    for idx, q in enumerate(quiz_data):
        user_ans = user_answers[idx]
        is_correct = user_ans == q["answer"]

        if is_correct:
            st.success(f"‡∏Ç‡πâ‡∏≠ {idx+1}: ‚úÖ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        else:
            st.error(f"‡∏Ç‡πâ‡∏≠ {idx+1}: ‚ùå ‡∏ú‡∏¥‡∏î (‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏∑‡∏≠: {q['answer']})")

        # üí¨ ‡∏ä‡πà‡∏≠‡∏á‡∏ñ‡∏≤‡∏° AI
        with st.expander(f"üí¨ ‡∏ñ‡∏≤‡∏° AI ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏Ç‡πâ‡∏≠ {idx+1})"):
            follow_up = st.text_input(f"‚ùì ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠ {idx+1}", key=f"follow_q{idx}")
            if st.button(f"‡∏ñ‡∏≤‡∏° AI ‡∏Ç‡πâ‡∏≠ {idx+1}", key=f"ask_q{idx}"):
                full_prompt = f"""
‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: {topic}
‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö: {q['question']}
‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: {q['answer']}
‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: {follow_up}

‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏ï‡πâ‡∏ô
"""
                with st.spinner("AI ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢..."):
                    response = client.chat.completions.create(
                        model="gpt-4",
                        messages=[{"role": "user", "content": full_prompt}]
                    )
                    st.info(response.choices[0].message.content)

        score += int(is_correct)

    st.subheader("üìä ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°")
    st.write(f"‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î **{score} / 10** ‡∏Ç‡πâ‡∏≠ üéâ")